/*
 * ChatMessageRenderer.java
 *
 * Created on __DATE__, __TIME__
 */

package ch.pentago.ui;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

import ch.pentago.client.ClientState;
import ch.pentago.core.ChatMessage;
import ch.pentago.xml.UserConfigManager;

/**
 *
 * @author  __USER__
 */
public class ChatMessageRenderer extends javax.swing.JPanel implements
		ListCellRenderer {

	private Color ownmessagecolor = new Color(Integer.parseInt(
			UserConfigManager.getUserConfigItem("client", "ownmessagecolor"),
			16));

	private Color othermessagecolor = new Color(Integer.parseInt(
			UserConfigManager.getUserConfigItem("client", "othermessagecolor"),
			16));

	private static final long serialVersionUID = -5486428422975166919L;

	private ChatMessage message = new ChatMessage("me", new Date(), "nothing");

	private Calendar cal = Calendar.getInstance(TimeZone
			.getTimeZone(UserConfigManager.getUserConfigItem("client",
					"timezone")));

	/** Creates new form ChatMessageRenderer */
	public ChatMessageRenderer() {
		initComponents();
		this.setOpaque(true);
	}

	private String getCalendarMinute() {
		return ((cal.get(Calendar.MINUTE) < 10) ? "0" : "")
				+ cal.get(Calendar.MINUTE);
	}

	private String getCalendarHour() {
		return ((cal.get(Calendar.HOUR_OF_DAY) < 10) ? "0" : "") + cal.get(Calendar.HOUR_OF_DAY);
	}
	
	private Color getColor() {
		return (message.getSessionid() != null && message.getSessionid()
				.equals(ClientState.currentUser.getSessionId())) ? ownmessagecolor
				: othermessagecolor;
	}

	public void paint(Graphics g) {
		Graphics2D g2 = (Graphics2D) g;
		g2.setColor(getColor());
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
				RenderingHints.VALUE_ANTIALIAS_ON);
		g2.fillRoundRect(10, 10, getWidth() - 20, 30, 20, 20);
		g2.setFont(new Font("URW Gothic L", Font.BOLD, 16));
		g2.setColor(Color.black);
		g2.drawString(message.getUsername(), 15, 30);
		cal.setTime(message.getTimestamp());
		g2.drawString(getCalendarHour() + ":" + getCalendarMinute(),
				getWidth() - 60, 30);
		g2.setFont(new Font("URW Gothic L", Font.PLAIN, 16));
		g2.drawString(message.getMessage(), 15, 60);
	}

	public void setMessage(ChatMessage msg) {
		message = msg;
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc=" Generated Code ">
	private void initComponents() {

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
				this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(0, 261,
				Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(0, 64,
				Short.MAX_VALUE));
	}// </editor-fold>//GEN-END:initComponents

	public static void main(String args[]) {
		JFrame frame = new JFrame();
		frame.setSize(400, 400);
		frame.setContentPane(new ChatMessageRenderer());
		frame.setVisible(true);
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	// End of variables declaration//GEN-END:variables

	public Component getListCellRendererComponent(JList list, Object value,
			int index, boolean isSelected, boolean cellHasFocus) {

		if (isSelected) {
			setBackground(list.getSelectionBackground());
			setForeground(list.getSelectionForeground());
		} else {
			setBackground(list.getBackground());
			setForeground(list.getForeground());
		}

		ChatMessage msg = (ChatMessage) value;
		this.setMessage(msg);
		return this;
	}

}